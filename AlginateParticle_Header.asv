close all
clear all
clc

matlabrc;
addpath('peripherals');

%%

DataDir = 'D:/Elisa/';
filename = 'IBIDI_061124'; % Leave extension off here
OutputDir = ['Outputs/' filename '/']; mkdir(OutputDir);
znum = 6; % Which z slice to work with
R = 600; % Starting interploation line length, larger is better
THRES = 0.4; % Outer radius cutoff threshold
ORDER = 2; WINDOW = 15; % sgolay parameters

bfr = BioformatsImage([DataDir filename '.nd2']);
NumT = bfr.sizeT; % Number of time points
NumXY = bfr.seriesCount; % Number of XY points
disp(['Channel 1: ' bfr.channelNames{1,1} ', Channel 2: ' bfr.channelNames{1,2}]);

fluorChannel = 1; brightfieldChannel = 2; % Default, check per file!

%% Get initial positions

% If running for the first time, get rough positions of the middle
if ~exist([OutputDir 'ParticleOrigins.mat'])
    fh = figure; set(fh,'color','white'); 
    disp('Click once somewhere in the middle of the particle')
    for ixy = 1:NumXY
        img_bf = getPlane(bfr,znum,brightfieldChannel,1,ixy);
        imshow(img_bf,[]);
        hold on;
        [XC(ixy),YC(ixy)] = ginput(1);
        clf;
    end
    save([OutputDir 'ParticleOrigins.mat'],'XC','YC','filename');
end

%% Main

for ixy = 1
    % Get starting position of this particle
    xc = XC(ixy); yc = YC(ixy);
% for i = 1:NT
    for i = 1

        % Get images and setup meshgrid
        img_bf = mat2gray(double(getPlane(bfr,znum,brightfieldChannel,i)));
        img_fl = double(getPlane(bfr,znum,fluorChannel,i));
        [XX,YY] = meshgrid(1:size(img_bf,2),1:size(img_bf,1));

        % Find outer radius
        theta = linspace(0,2*pi,200);
        xq = linspace(xc,xc+R.*cos(theta(i)),200);
        yq = linspace(yc,yc+R.*sin(theta(i)),200);
        r = sqrt((xq-xc).^2 + (yq-yc).^2);
        vq_bf = interp2(XX,YY,img_bf,xq,yq);
        vq_fl = interp2(XX,YY,img_fl,xq,yq);

        % Find max of bf radius
        [~,ind] = max(vq_bf);
        previous = mean(vq_bf(1:ind-1));
        next = mean(vq_bf(ind:end));
        ind2 = find(vq_bf(ind:end)<THRES,1,'first');
        ind2 = ind2 + ind-1;
        
        % Get rough radius and xy boundary
        rdata(i) = r(ind2);
        xb(i) = xq(ind2); 
        yb(i) = yq(ind2);

        % Remove any strong outliers
        inds = 1:length(theta);
        d = abs(rdata - mean(rdata));
        inds(inds(d > 3*std(rdata))) = [];
        xb = xb(inds);
        yb = yb(inds);
        rdata = rdata(inds);

        % Filtered boundary
        x_filt = sgolayfilt(xb,ORDER,WINDOW); 
        y_filt = sgolayfilt(yb,ORDER,WINDOW);

        % Best fit circle to filtered boundary
       [xc_f,yc_f,R_f,a] = circfit(x_filt,y_filt);
       output(i).origin_fit = [xc_f,yc_f];
       output(i).radius_fit = R_f

        % Find pixels in polygon
        IN = inpolygon(XX,YY,x_filt,y_filt);

        


    end % End of looping over time
end % End of looping over XY



